<?php/* *************************************************************************************Title          prayer Component for JoomlaAuthor         Mike LeeperEnhancements   Douglas Machado License        This program is free software: you can redistribute it and/or modify               it under the terms of the GNU General Public License as published by               the Free Software Foundation, either version 3 of the License, or               (at your option) any later version.               This program is distributed in the hope that it will be useful,               but WITHOUT ANY WARRANTY; without even the implied warranty of               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               GNU General Public License for more details.               You should have received a copy of the GNU General Public License               along with this program.  If not, see <http://www.gnu.org/licenses/>.Copyright      2006-2014 - Mike Leeper (MLWebTechnologies) ****************************************************************************************No direct access*/defined('_JEXEC') or die('Restricted access');class CWMPrayerModelPrayer extends JModelLegacy{	public $id = null;	public $data = null;	public $codata = null;	public $total = null;	public $hits = null;	public function __construct()	{		parent::__construct();		$input = new JInput;		$id = $input->getInt('id', 0);		$this->setId((int) $id);	}	public function setId($id)	{		$this->id = $id;		$this->data = null;	}	public function getData($sort, $searchword, $searchrequester, $searchrequesterid)	{		if (empty($this->data))		{			$query = $this->_buildQuery($sort, $searchword, $searchrequester, $searchrequesterid);			$this->data = $this->_getList($query);		}		return $this->data;	}	public function _buildQuery($sort, $searchword, $searchrequester, $searchrequesterid)	{		if ($searchword && $searchword != JText::_('PCSEARCH...'))		{			$where = " AND (request REGEXP '" . $searchword . "' OR requester REGEXP '" . $searchword . "')";		}		elseif ($searchrequester)		{			$where = " AND requester REGEXP '" . $searchrequester . "'";			if ($searchrequesterid)			{				$where .= " AND requesterid REGEXP '" . $searchrequesterid . "'";			}		}		else		{			$where = "";		}		$query = "SELECT *,request AS text FROM #__cwmprayer WHERE state='1' AND displaystate='1'" . $where;		if ($sort == "99")		{			$query .= " ORDER BY DATE_FORMAT(CONCAT_WS(' ',date,time),'%Y-%m-%d %T') DESC";		}		else		{			$query .= " AND topic='" . $sort . "' ORDER BY DATE_FORMAT(CONCAT_WS(' ',date,time),'%Y-%m-%d %T') DESC";		}		return $query;	}	public function getNewData()	{		if (empty($this->data))		{			$query = $this->_buildQueryNewReq();			$this->data = $this->_getList($query);		}		return $this->data;	}	public function _buildQueryNewReq()	{		$query = "SELECT * FROM #__cwmprayer WHERE state='0' ORDER BY id DESC";		return $query;	}	public function getTotalData()	{		if (empty($this->_total))		{			$query = $this->_buildQueryTotalReq();			$this->_total = $this->_getListCount($query);		}		return $this->_total;	}	public function _buildQueryTotalReq()	{		$query = "SELECT id FROM #__cwmprayer WHERE state='1' AND displaystate='1'";		return $query;	}	public function getTotal($sort, $searchword, $searchrequester, $searchrequesterid)	{		if (empty($this->_total))		{			$query = $this->_buildQuery($sort, $searchword, $searchrequester, $searchrequesterid);			$this->_total = $this->_getListCount($query);		}		return $this->_total;	}	public function getNewTotal()	{		if (empty($this->total))		{			$query = $this->_buildQueryNewReq();			$this->total = $this->_getListCount($query);		}		return $this->total;	}	public function getEditData($eid)	{		if (empty($this->data))		{			$query = $this->_buildEditQuery($eid);			$this->data = $this->_getList($query);		}		return $this->data;	}	public function _buildEditQuery($eid)	{		$query = "SELECT *,request AS text FROM #__cwmprayer WHERE id='" . (int) $eid . "'";		return $query;	}	public function getCOData($cou)	{		if (empty($this->_codata))		{			$query = $this->_buildCOQuery($cou);			$this->_codata = $this->_getList($query);		}		return $this->_codata;	}	public function _buildCOQuery($cou)	{		$query = "SELECT name FROM #__users WHERE id='" . (int) $cou . "'";		return $query;	}	/**	 * Is Checked out	 * 	 * @param   int  $uid  ID	 *	 * @return bool|void	 *	 * @since 4.0	 */	public function isCheckedOut($uid = 0)	{		if ($this->_loadData())		{			if ($uid)			{				return ($this->data[0]->checked_out && $this->data[0]->checked_out != $uid);			}			return $this->data[0]->checked_out;		}		return;	}	public function _loadData()	{		if (empty($this->data))		{			$query = 'SELECT checked_out' .				' FROM #__cwmprayer' .				' WHERE id = ' . (int) $this->_id;			$this->_db->setQuery($query);			$this->data = $this->_db->loadObject();			return $this->data;		}		return true;	}	public function checkin()	{		if ($this->_id)		{			$prayer = $this->getTable();			if (!$prayer->checkin($this->_id))			{				$this->setError($this->_db->getErrorMsg());				return false;			}			return true;		}		return false;	}	public function checkout($uid = null)	{		if ($this->_id)		{			if (is_null($uid))			{				$user = JFactory::getUser();				$uid = $user->get('id');			}			$prayer = $this->getTable();			if (!$prayer->checkout($uid, $this->_id))			{				$this->setError($this->_db->getErrorMsg());				return false;			}			return true;		}		return false;	}}