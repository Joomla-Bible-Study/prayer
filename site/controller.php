<?php/* *************************************************************************************Title          prayer Component for JoomlaAuthor         Mike LeeperEnhancements   Douglas Machado & Christina IshiiLicense        This program is free software: you can redistribute it and/or modify               it under the terms of the GNU General Public License as published by               the Free Software Foundation, either version 3 of the License, or               (at your option) any later version.               This program is distributed in the hope that it will be useful,               but WITHOUT ANY WARRANTY; without even the implied warranty of               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               GNU General Public License for more details.               You should have received a copy of the GNU General Public License               along with this program.  If not, see <http://www.gnu.org/licenses/>.Copyright      2006-2014 - Mike Leeper (MLWebTechnologies) ****************************************************************************************No direct access*/defined('_JEXEC') or die('Restricted access');class PrayerController extends JControllerLegacy{	public $pcConfig;	/**	 * Constructor.	 *	 * @param   array $config An optional associative array of configuration settings.	 *                        Recognized key values include 'name', 'default_task', 'model_path', and	 *                        'view_path' (this list is not meant to be comprehensive).	 *	 * @since   4.0	 */	public function __construct($config = array())	{		parent::__construct($config);		$pcParams      = JComponentHelper::getParams('com_prayer');		$pcParamsArray = $pcParams->toArray();		$pcConfig      = array();		foreach ($pcParamsArray['params'] as $name => $value)		{			$pcConfig[(string) $name] = (string) $value;		}		$this->pcConfig = $pcConfig;	}	/**	 * Confirm ??	 *	 * @return void	 *	 * @since 4.0	 */	public function confirm()	{		$db                         = JFactory::getDBO();		$plgSystemPrayerEmail = new plgSystemPrayerEmail;		$id = JFilterOutput::cleanText(JRequest::getVar('id', null, 'get', 'int'));		$sessionid = JFilterOutput::cleanText(JRequest::getVar('sessionid', null, 'get', 'string'));		$itemid = $prayer->PCgetItemid();		if (is_numeric($id) && $prayer->PCSIDvalidate($sessionid))		{			$db->setQuery("SELECT request,requester,email,displaystate FROM #__prayer WHERE id='" . $id .				"' AND sessionid='" . $sessionid . "' AND publishstate='0'");			$cresults = $db->loadObjectList();			if (count($cresults) > 0)			{				$db->setQuery("UPDATE #__prayer SET publishstate='1' WHERE id='" . $id . "' AND sessionid='" . $sessionid . "'");				if (!$db->query())				{					die("SQL error" . $db->stderr(true));				}				$sendpriv = $cresults[0]->displaystate;				if ($sendpriv)				{					if (JPluginHelper::isEnabled('system', 'prayercenteremail'))					{						$results = $plgSystemPrayerEmail->pcEmailTask('PCemail_notification', array('0' => $id));						$results = $plgSystemPrayerEmail->pcEmailTask('PCemail_prayer_chain', array('0' => $id));					}					if ($pcConfig['config_distrib_type'] > 1 && $pcConfig['config_pms_plugin'])					{						$prayer->PCsendPM($cresults[0]->requester, $cresults[0]->request, $cresults[0]->request, $cresults[0]->email, $sendpriv);					}				}				elseif (!$sendpriv)				{					if (JPluginHelper::isEnabled('system', 'prayercenteremail'))					{						$results = $plgSystemPrayerEmail->pcEmailTask('PCemail_notification', array('0' => $id));					}					if ($pcConfig['config_distrib_type'] > 1 && $pcConfig['config_pms_plugin'])					{						$prayer->PCsendPM($cresults[0]->requester, $cresults[0]->request, $cresults[0]->request, $cresults[0]->email, $sendpriv);					}				}				$returnurl = JRoute::_('index.php?option=com_prayer&task=view&Itemid=' . $itemid . '&return_msg=' .					htmlentities(JText::_('PCREQSUBMIT'), ENT_COMPAT, 'UTF-8')				);				$this->setRedirect(JRoute::_($returnurl, false));			}		}		$returnurl = JRoute::_('index.php?option=com_prayer&task=view&Itemid=' . $itemid);		$this->setRedirect(JRoute::_($returnurl, false));	}	/**	 * Confirm adm ??	 *	 * @return  void	 *	 * @since 4.0	 */	public function confirm_adm()	{		$db = JFactory::getDBO();		$id = JFilterOutput::cleanText(JRequest::getVar('id', null, 'get', 'int'));		$sessionid = JFilterOutput::cleanText(JRequest::getVar('sessionid', null, 'get', 'string'));		$itemid = $prayer->PCgetItemid();		if (is_numeric($id) && $prayer->PCSIDvalidate($sessionid))		{			$db->setQuery("SELECT request,requester,email,displaystate FROM #__prayer WHERE id='" . $id .				"' AND sessionid='" . $sessionid . "' AND publishstate='0'");			$cresults = $db->loadObjectList();			if (count($cresults) > 0)			{				$db->setQuery("UPDATE #__prayer SET publishstate='1' WHERE id='" . $id . "' AND sessionid='" . $sessionid . "'");				if (!$db->query())				{					die("SQL error" . $db->stderr(true));				}				$sendpriv = $cresults[0]->displaystate;				if ($sendpriv)				{					if (JPluginHelper::isEnabled('system', 'prayercenteremail'))					{						$results = plgSystemPrayerEmail::pcEmailTask('PCemail_notification', array('0' => $id));						$results = plgSystemPrayerEmail::pcEmailTask('PCemail_prayer_chain', array('0' => $id));					}					if ($pcConfig['config_distrib_type'] > 1 && $pcConfig['config_pms_plugin'])					{						$prayer->PCsendPM($cresults[0]->requester, $cresults[0]->request, $cresults[0]->email, $sendpriv);					}				}				elseif (!$sendpriv)				{					if (JPluginHelper::isEnabled('system', 'prayercenteremail'))					{						$results = plgSystemPrayerEmail::pcEmailTask('PCemail_notification', array('0' => $id));					}					if ($pcConfig['config_distrib_type'] > 1 && $pcConfig['config_pms_plugin'])					{						$prayer->PCsendPM($cresults[0]->requester, $cresults[0]->request, $cresults[0]->email, $sendpriv);					}				}				$returnurl = JRoute::_('index.php?option=com_prayer&task=view&Itemid=' . $itemid . '&return_msg=' .					htmlentities(JText::_('PCREQAPPROVE'), ENT_COMPAT, 'UTF-8')				);				$this->setRedirect(JRoute::_($returnurl, false));			}		}		$returnurl = JRoute::_('index.php?option=com_prayer&task=view&Itemid=' . $itemid);		$this->setRedirect(JRoute::_($returnurl, false));	}	/**	 * Delreq adm ???	 *	 * @return void	 *	 * @since 4.0	 */	public function delreq_adm()	{		$db = JFactory::getDBO();		$id = JFilterOutput::cleanText(JRequest::getVar('id', null, 'get', 'int'));		$sessionid = JFilterOutput::cleanText(JRequest::getVar('sessionid', null, 'get', 'string'));		$itemid = $prayer->PCgetItemid();		if (is_numeric($id) && $prayer->PCSIDvalidate($sessionid))		{			$db->setQuery("SELECT COUNT(id) FROM #__prayer WHERE id='" . $id . "' AND sessionid='" . $sessionid . "' AND publishstate='0'");			$cresults = $db->loadResult();			if ($cresults > 0)			{				$db->setQuery("DELETE FROM #__prayer WHERE id='" . $id . "' AND sessionid='" . $sessionid . "'");				if (!$db->query())				{					JError::raiseError(500, $db->stderr());				}			}		}		$returnurl = JRoute::_('index.php?option=com_prayer&task=view&Itemid=' . $itemid);		$this->setRedirect(JRoute::_($returnurl, false));	}	/**	 * ??	 *	 * @return void	 *	 * @since version	 */	public function confirm_sub()	{		$db = JFactory::getDBO();		$id = JFilterOutput::cleanText(JRequest::getVar('id', null, 'get', 'int'));		$sessionid = JFilterOutput::cleanText(JRequest::getVar('sessionid', null, 'get', 'string'));		$itemid = $prayer->PCgetItemid();		if (is_numeric($id) && $prayer->PCSIDvalidate($sessionid))		{			$db->setQuery("SELECT email FROM #__prayer_subscribe WHERE id='" . $id . "' AND sessionid='" . $sessionid . "' AND approved='0'");			$subresults = $db->loadObjectList();			if (count($subresults) > 0)			{				$db->setQuery("UPDATE #__prayer_subscribe SET approved='1' WHERE id='" . $id . "' AND sessionid='" . $sessionid . "'");				if (!$db->query())				{					die("SQL error" . $db->stderr(true));				}				if (JPluginHelper::isEnabled('system', 'prayercenteremail'))				{					$results = plgSystemPrayerEmail::pcEmailTask('PCemail_subscribe', array('0' => $subresults[0]->email));					if (($pcConfig['config_email_subscribe']) && ($pcConfig['config_admin_approve_subscribe'] == 2))					{						$results = plgSystemPrayerEmail::pcEmailTask('PCadmin_email_subscribe_notification', array('0' => $subresults[0]->email));					}				}				$returnurl = JRoute::_('index.php?option=com_prayer&task=subscribe&Itemid=' . $itemid . '&return_msg=' . htmlentities(JText::_('PCENTRYACCEPTED'), ENT_COMPAT, 'UTF-8'));				$this->setRedirect(JRoute::_($returnurl, false));			}		}		$returnurl = JRoute::_('index.php?option=com_prayer&task=subscribe&Itemid=' . $itemid);		$this->setRedirect(JRoute::_($returnurl, false));	}	/**	 *??	 *	 * @return void	 *	 * @since version	 */	public function confirm_unsub()	{		$db = JFactory::getDBO();		$id = JFilterOutput::cleanText(JRequest::getVar('id', null, 'get', 'int'));		$sessionid = JFilterOutput::cleanText(JRequest::getVar('sessionid', null, 'get', 'string'));		$itemid = $prayer->PCgetItemid();		if (is_numeric($id) && $prayer->PCSIDvalidate($sessionid))		{			$db->setQuery("SELECT email FROM #__prayer_subscribe WHERE id='" . $id . "' AND sessionid='" . $sessionid . "' AND approved='1'");			$unsubresults = $db->loadObjectList();			if (count($unsubresults) > 0)			{				$db->setQuery("DELETE FROM #__prayer_subscribe WHERE id='" . $id . "' AND sessionid='" . $sessionid . "'");				if (!$db->execute())				{					die("SQL error" . $db->stderr(true));				}				if (JPluginHelper::isEnabled('system', 'prayercenteremail'))				{					$results = plgSystemPrayerEmail::pcEmailTask('PCemail_unsubscribe', array('0' => $unsubresults[0]->email));				}				$returnurl = JRoute::_('index.php?option=com_prayer&task=subscribe&Itemid=' . $itemid . '&return_msg=' .					htmlentities(JText::_('PCENTRYREMOVED'), ENT_COMPAT, 'UTF-8')				);				$this->setRedirect(JRoute::_($returnurl, false));			}		}		$returnurl = JRoute::_('index.php?option=com_prayer&task=subscribe&Itemid=' . $itemid);		$this->setRedirect(JRoute::_($returnurl, false));	}	/**	 * ??	 *	 * @param   bool $cachable ?	 *	 * @return JControllerLegacy	 *	 * @since version	 */	public function newreq($cachable = false)	{		$input = JFactory::getApplication()->input;		$input->set('view', $input->getCmd('view', 'newreq'));		return parent::display($cachable);	}	public function subscribe()	{		JFactory::getApplication()->input->set('view', 'subscribe');		parent::display();	}	public function unsubscribe()	{		JFactory::getApplication()->input->set('view', 'subscribe');		parent::display();	}	public function view()	{		$view = $this->getView('list', 'html');		if ($pcConfig['config_view_template'] == 1)		{			$view->setLayout('rounded');		}		elseif ($pcConfig['config_view_template'] == 2)		{			$view->setLayout('basic');		}		$view->display();	}	/**	 * ??	 *	 * @return void	 *	 * @since 4.0	 */	public function pdf()	{		if ($pc_rights->get('pc.view') && $pcConfig['config_show_pdf'])		{			$lang = Jfactory::getLanguage();			$lang->load('com_prayer', JPATH_SITE);			$headerarr = array(utf8_encode(JText::_('PCMODREQ')), utf8_encode(JText::_('PCMODREQR')));			$listtype = JRequest::getVar('listtype', null, 'method', 'int');			require_once 'components/com_prayer/helpers/pc_pdf_class.php';			$pdf = new PDF;			$pdf->listtype = $listtype;			$pdf->AddPage();			$pdf->Ln(7);			$pdf->SetFont('helvetica', '', 10);			if ($listtype == 0)			{				$id = JRequest::getVar('id', null, 'method', 'int');				$pdf->Table($headerarr, "SELECT * FROM #__prayer WHERE id='$id' AND publishstate='1' AND displaystate='1'");			}			elseif ($listtype == 1)			{				$pdf->Table($headerarr, "SELECT * FROM #__prayer WHERE publishstate='1' AND displaystate='1' AND date=CURDATE() ORDER BY topic,DATE_FORMAT(CONCAT_WS(' ',date,time),'%Y-%m-%d %T') DESC");			}			elseif ($listtype == 2)			{				$pdf->Table($headerarr, "SELECT topic,request,requester FROM #__prayer WHERE publishstate='1' AND displaystate='1' AND WEEKOFYEAR(date)=WEEKOFYEAR(CURDATE()) AND YEAR(date)=YEAR(CURDATE()) ORDER BY topic,DATE_FORMAT(CONCAT_WS(' ',date,time),'%Y-%m-%d %T') DESC");			}			$pdf->Output();			exit(0);		}		else		{			echo '<div class="componentheading">' . utf8_encode(JText::_('PCTITLE')) . '</div>';			echo '<h5><center>' . JText::_('JERROR_ALERTNOAUTHOR') . '<br />' . utf8_encode(JText::_('JGLOBAL_YOU_MUST_LOGIN_FIRST')) . '</center></h5>';			echo '<br /><br /><br /><br />';			$notAuth = 1;		}	}	/**	 * ??	 *	 * @return void	 *	 * @since 4.0	 */	public function view_links()	{		JFactory::getApplication()->input->set('view', 'links');		parent::display();	}	/**	 * ??	 *	 * @return void	 *	 * @since 4.0	 */	public function view_devotion()	{		JFactory::getApplication()->input->set('view', 'devotions');		parent::display();	}	/**	 * ??	 *	 * @return void	 *	 * @since 4.0	 */	public function moderate()	{		if ($pcConfig['config_use_admin_alert'] > 1 && $pc_rights->get('pc.moderate'))		{			JFactory::getApplication()->input->set('view', 'moderate');			parent::display();		}		else		{			echo '<div class="componentheading">' . htmlentities(JText::_('PCTITLE')) . '</div>';			echo '<h5><center>' . JText::_('JERROR_ALERTNOAUTHOR') . '<br />' . JText::_('JGLOBAL_YOU_MUST_LOGIN_FIRST') . '</center></h5>';			echo '<br /><br /><br /><br />';			$notAuth = 1;		}	}	function edit()	{		$eid = JFactory::getApplication()->input->getInt('id', null);		$eid = JFilterOutput::cleanText($eid);		JFactory::getApplication()->input->set('view', 'edit');		parent::display();	}	function view_request()	{		$eid = JFactory::getApplication()->input->getInt('id', null);		JFactory::getApplication()->input->set('view', 'showreq');		parent::display();	}	function rss()	{		$user = JFactory::getUser();		$app = JFactory::getApplication();		$offset = "";		if ($pc_rights->get('pc.view') && $pcConfig['config_show_pdf'])		{			$lang = Jfactory::getLanguage();			$lang->load('com_prayer', JPATH_SITE);			$livesite = JURI::base();			$sitename = $app->getCfg('sitename');			$itemid = $prayer->PCgetItemid();			$config_rss_num = $pcConfig['config_rss_num'];			$db = JFactory::getDBO();			while (@ob_end_clean())			{				// ?			};			require_once 'components/com_prayer/assets/rss/feedcreator.php';			$feed_type = 'RSS2.0';			$filename = 'pc_feed.xml';			$cacheDir = JPATH_BASE . '/cache';			$cachefile = $cacheDir . '/' . $filename;			$rss = new UniversalFeedCreator;			$image = new FeedImage();			if ($pcConfig['config_enable_rss_cache'])			{				$rss->useCached($feed_type, $cachefile, $pcConfig['config_rss_update_time']);			}			$rss->title = $sitename . ' - ' . utf8_encode(JText::_('PCTITLE'));			$rss->description = utf8_encode(JText::_('PCRSSFEEDMSG')) . ' ' . $sitename;			$rss->link = htmlspecialchars($livesite) . 'index.php?option=com_prayer&amp;Itemid=' . $itemid;			$rss->syndicationURL = htmlspecialchars($livesite) . 'index.php?option=com_prayer&amp;Itemid=' . $itemid;			$rss->cssStyleSheet = null;			$feed_image = $livesite . 'components/com_prayer/assets/images/prayer.png';			if ($feed_image)			{				$image->url = $feed_image;				$image->link = $rss->link;				$image->title = 'Powered by Joomla! & prayer';				$image->description = $rss->description;				$rss->image = $image;			}			$db->setQuery("SELECT * FROM #__prayer "				. "\n WHERE publishstate = 1 "				. "\n AND displaystate = 1 "				. "\n ORDER BY id DESC "				. "\n LIMIT " . $config_rss_num . ""			);			$rows = $db->loadObjectList();			foreach ($rows as $row)			{				$item = new FeedItem;				$item->title = utf8_encode(html_entity_decode($row->requester));				$item->link = JRoute::_("index.php?option=com_prayer&amp;Itemid=" . $itemid . "&amp;task=view_request&amp;type=rss&amp;id=" . $row->id);				$words = $row->request;				if ($pcConfig['config_rss_limit_text'])				{					$words = substr($words, 0, $pcConfig['config_rss_text_length']);				}				$item->description = $words;				$seconds = date_offset_get(new DateTime);				$offset = $seconds / 3600;				$itemdate = date("r", strtotime($row->date . ' ' . $row->time . ' ' . $offset));				$item->date = $itemdate;				$rss->addItem($item);			}			$rss->saveFeed($feed_type, $cachefile);		}		else		{			$this->setRedirect('index.php?option=com_prayer', JText::_('JERROR_ALERTNOAUTHOR'));		}	}	/**	 * ??	 *	 * @return void	 *	 * @since 4.0	 */	public function PCCapValid()	{		$JVersion = new JVersion();		$captcha = JRequest::getVar('cap', null, 'post', 'int');		$modtype = JRequest::getVar('modtype', null, 'post', 'string');		$mod = JRequest::getVar('mod', null, 'post', 'string');		$returnto = $_SERVER['HTTP_REFERER'];		preg_match("!index.php\?!", $returnto, $match);		if (!$match) $returnto = $returnto . 'index.php?';		if ($captcha == 1)		{			$session = JFactory::getSession();			if (isset($mod))			{				$security_code = strtolower($session->get($mod . '_security_code'));			}			else			{				$security_code = strtolower($session->get('pc_security_code'));			}			$usercode = strtolower((JRequest::getVar('usercode', null, 'post', 'string')));			if ($security_code != $usercode)			{				$i = $session->get('pc_max_attempts');				$i++;				$session->set('pc_max_attempts', $i);				if ($pcConfig['config_captcha_maxattempts'] > $i)				{					$message = JText::_('PCINVALIDCODE');				}				else				{					$message = JText::_('PCCAPTCHAMAXATTEMPTS');				}				exit($message);			}			else			{				exit(true);			}		}		elseif ($captcha == 6)		{			require_once(JPATH_ROOT . '/components/com_prayer/assets/captcha/recaptchalib.php');			$privatekey = $pcConfig['config_recap_privkey'];			$resp = recaptcha_check_answer($privatekey, $_SERVER["REMOTE_ADDR"], $_POST["recaptcha_challenge"], $_POST["recaptcha_response"]);			if (!$resp->is_valid)			{				$message = htmlentities(JText::_('PCINVALIDCODE'), ENT_COMPAT, 'UTF-8');				exit($message);			}			else			{				exit(true);			}		}		elseif ($captcha == 7 && (real) $JVersion->RELEASE >= 2.5)		{			$session =& JFactory::getSession();			$plugin = JFactory::getApplication()->getParams()->get('captcha', JFactory::getConfig()->get('captcha'));			$captcha = JCaptcha::getInstance($plugin, array('namespace' => 'adminForm'));			$captcha_code = "";			$resp = $captcha->checkAnswer($captcha_code);			if ($resp == false)			{				$message = htmlentities(JText::_('PCINVALIDCODE'));				echo $message;			}			else			{				$session->set('pc_respchk', true);				echo true;			}		}	}}